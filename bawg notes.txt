Make separate pages (and links) for flower lists (by color and "all")
with names only (for bandwidth saving) and photos only (for showing off).

It would be nice to have a glossary with popup links automatically created
  where glossary words are used.
Jepson example:
<u class="dotted" title="Group of bracts more or less held together as a unit, subtending a flower, fruit (acorn cup), or inflorescence." >Involucre</u>
Remember that mobile doesn't support hovering.

Print errors:
  *no color listed
  *listed color not supported
  *broken photo
  no scientific name for leaf page
  multiple scientific names from observations.csv

Read and write back a db.yaml file with various discovered information
about pages that can then be hand edited.  E.g.
  the scientific name used by various sources
  replacement type for 'ssp.' (e.g. 'var.')
  which photo is first for a page
  the common name and scientific name for a page
  alternative common names (e.g. as used in iNaturalist)
  the iNaturalist taxon (if not found in the observations, e.g. for a key)
Should color also go here or separately?
  it might work to generate the db with a new flower, then add the color by hand

The db would obviously override certain discovered info.
  e.g. scientific name from observations.csv
But it should also be overridden by other info
  e.g. scientific name listed on the page.
But when that happens, how should derived info be handled?
  e.g. Jepson scientific name.
Perhaps use an interactive process to initially populate the database,
  and never specify values in other places.
  e.g. if no scientific name is found in observations.csv, ask for it.
  always ask for the color of a new flower
Or mark derived info explicitly in the database,
  e.g. by recording it as "default".
  This allows it to be easily changed or reverted.

It'd be nice if the up/down arrow keys changed which autocomplete entry was currently selected.

It'd be nice if the escape key removed autocomplete until more was typed.

Show iNaturalist details on key pages.
  (Requires accumulating data from children.)

###############################################################################

how to mass rename files:
for f in *.jpg; do git mv "$f" "$(echo $f | sed 's/-\([-0-9]*\)\.jpg$/,\1.jpg/')"; done

###############################################################################

Create a script to help copy new and changed files to a portable device.
  Copy new and modified files to a new (and git-ignored) folder,
    ready for the user to copy them over using Windows Explorer.
  Record the timestamp of all files to a (git-ignored) database
    to be used next time for identifying new and modified files.
  Deleted files won't be deleted, but they won't cause any harm.
  Include top-level files that should be copied if they are modified,
    e.g. index.html, bafg.css, search.js, pages.js
  Perhaps allow an argument with a date so that all files modified
    after that date are copied in case the database gets screwed up.
  (Explorer displays the photo creation date, but the file modification
    data is still correct internally.)

Add Centaurium tenuiflorum to Zeltnera pages.

Should autogenerated families be structured more like top-level lists
(with a complete indented hierarchy)?

It would be nice to allow words to appear in the glossary multiple
times, with most tied to specific flower families.  Linked words would
then link to the appropriate definition (which would then link to the
general definition as additional information).

Put month info in table format with bar chart.
Put month info side by side with park info (depending on display width?)

/cygdrive/c/Python27/python -m cProfile -s cumtime flowers.py  | less

Add (optional) color info for unobserved flowers?
How would that be presented?  (border on CalPhoto placeholder?)

Allow families to auto-list their members after some introductory
text.  E.g. most sedges have triangular stems and grasses have round stems.

Make links up to the key (or any other parent) use an anchor position
that highlights the child's section of the key, similar to the
glossary.  (May require similar positioning tricks.)

Have a way to link from txt to the key to a flower (e.g. for
rough-fruited buttercup in buttercups).
E.g. {-buttercups#rough-fruited buttercup}

If all modified pages are under a single modified parent (excluding
"all" and color lists), bring up that parent page automatically.  (Or
simply list it first, or list the modified pages hierarchically.
Might be able to reuse the html generation for color lists.)

Support color:none for non-flowering plants.  Allow it to be used at
an upper level of hierarchy, from where it automatically propagates
downward through the tree.  (Should I also allow propagation for other
colors?  It could come in handy, e.g. for a genus that is always the
same color.  But it would also make it easy to be sloppy and not
verify the correct color of everything.)

Provide better support for things that aren't flowering plants,
e.g. non-flowering plants, animals, fungi, etc.  The color lists
should only be for flowering plants.  Besides the "all flowers" list,
there should be additional "all ..." lists for each hierarchical top.
Pages would default to behave as flowering plants unless their
hierarchical top is one of the other types, which would be listed and
link from index.html.

Support alternative common names for a taxon.  Alternative names are
listed only on the taxon page, not in links.  When searching, if an
alternative name matches and the primary name does not, the
alternative name appears in the autocomplete list instead of the
primary name.

For HTML files, use the scientific name instead of the common name if
possible?  This reduces churn when common names change, but it makes
it harder to find the corresponding txt file.  In any case, common
names don't change often, and scientific names can change, too.  This
potentially requires a separate HTML name because updating the page
name could confuse child linking (and jpg image attachment).

Allow jpg images to match the common name or scientific name, rather
than necessarily the page name.  Use of the page name may still be
preferred in case there are multiple matches on the common name.

For a line that begins with '[', include an automatic h3 or lower
format on the remainder of the text line.  Use increasing header
numbers based on the bracket depth.  Line breaks remain <br/>.
Recognize this and continue the header, or require that the line be
run together with <br/> in the middle?


I should pre-process pages.js to make it easier to use (e.g. every
line has a com and sci entry).  This should add the page name to the
com list as appropriate.

Should auto-generated families preferentially use the common name as
the page name?
